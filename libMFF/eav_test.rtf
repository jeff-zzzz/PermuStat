{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red255\green255\blue255;\red26\green26\blue26;
\red38\green38\blue38;\red242\green242\blue242;\red83\green83\blue83;\red29\green111\blue63;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs26 \cf2 \cb3 import numpy as np\
nV= 1196 \
nD = 3588 \
scalars = np.arange(\cf4 \cb1 1196.0\cf2 \cb3 )\
scalars /= 2.0 #1195.0\
\
\pard\pardeftab720
\cf4 \cb1 PyEGI = egiData.PythonAdapter()\cf2 \cb3 \
\cf4 \cb1 c = PyEGI.getCondition(\'93Triple\'94)\
\pard\pardeftab720
\cf2 \cb3 \
x = np.ones(1196.)\
x /= np.sqrt(3.0)\
\
\pard\pardeftab720\sl380

\f1\fs24 \cf5 \cb6 x \cf7 =\cf5  np\cf7 .\cf5 random\cf7 .\cf5 normal(0.0, 1., \cf8 1196\cf5 )
\f0\fs26 \cf2 \cb3 \
\pard\pardeftab720
\cf2 \
PyEGI.addTriplesCondition("Test")\
c = PyEGI.getCondition\cf4 \cb1 ("Test")\
\cf2 \cb3 \
for i in range(\cf4 \cb1 1196\cf2 \cb3 ):\
\'a0 c.setDipoleScalar(i, scalars[i])\
\'a0 c.setDipoleDirection(i, x[i], x[i], x[i], False)\
\
If you would like to visualize oriented dipoles, use\
PyEGI.addOrientedCondition("O: test")\
}